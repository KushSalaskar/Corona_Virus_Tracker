{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Desktop\\\\Projects\\\\cov19\\\\src\\\\Components\\\\Charts\\\\Charts.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../api/index.js'; // import { Line, Bar, Doughnut } from 'react-chartjs-2';\n\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport styles from './Charts.module.css';\n\nconst Charts = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetch = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetch();\n  }, []); // const lineChart = (\n  //     dailyData.length\n  //     ? (\n  //         <Line \n  //         data= {{\n  //             labels: dailyData.map(({date}) => date),\n  //             datasets: [{\n  //                 data: dailyData.map(({confirmed}) => confirmed),\n  //                 label: 'Infected',\n  //                 bordercolor: 'yellow',\n  //                 fill: true\n  //             }, {\n  //                 data: dailyData.map(({deaths}) => deaths),\n  //                 label: 'Deaths',\n  //                 bordercolor: 'red',\n  //                 backgroundColor: 'rgba(255, 0, 0, 0.3)',\n  //                 fill: true\n  //             }]\n  //         }}\n  //         />) : null\n  // );\n\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Active', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgb(233, 245, 10)', 'blue', 'rgb(15, 252, 3)', 'red'],\n        data: [confirmed.value, confirmed.value - (recovered.value + deaths.value), recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Cases in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }) : null;\n  const pieChart = confirmed ? /*#__PURE__*/React.createElement(Doughnut, {\n    data: {\n      labels: ['Active', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['blue', 'rgb(15, 252, 3)', 'red'],\n        data: [confirmed.value - (recovered.value + deaths.value), recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Situation in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: country ? styles.containercountry : styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, country ? barChart && pieChart : barChart);\n};\n\nexport default Charts;","map":{"version":3,"sources":["C:/Users/Rajesh/Desktop/Projects/cov19/src/Components/Charts/Charts.jsx"],"names":["React","useState","useEffect","fetchDailyData","Bar","Doughnut","styles","Charts","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetch","barChart","labels","datasets","label","backgroundColor","value","legend","display","title","text","pieChart","containercountry","container"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../api/index.js';\r\n// import { Line, Bar, Doughnut } from 'react-chartjs-2';\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\n\r\nconst Charts = ({data: {confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([])\r\n\r\n    useEffect(() =>{\r\n        const fetch = async () => {\r\n            setDailyData(await fetchDailyData())\r\n        }\r\n        fetch()\r\n    }, []);\r\n\r\n    // const lineChart = (\r\n    //     dailyData.length\r\n    //     ? (\r\n    //         <Line \r\n    //         data= {{\r\n    //             labels: dailyData.map(({date}) => date),\r\n    //             datasets: [{\r\n    //                 data: dailyData.map(({confirmed}) => confirmed),\r\n    //                 label: 'Infected',\r\n    //                 bordercolor: 'yellow',\r\n    //                 fill: true\r\n    //             }, {\r\n    //                 data: dailyData.map(({deaths}) => deaths),\r\n    //                 label: 'Deaths',\r\n    //                 bordercolor: 'red',\r\n    //                 backgroundColor: 'rgba(255, 0, 0, 0.3)',\r\n    //                 fill: true\r\n    //             }]\r\n    //         }}\r\n    //         />) : null\r\n    // );\r\n\r\n    const barChart = (\r\n        confirmed \r\n        ? (\r\n            <Bar \r\n             data={{\r\n                labels:['Infected', 'Active', 'Recovered', 'Deaths'],\r\n                datasets:[{\r\n                    label: 'People',\r\n                    backgroundColor: ['rgb(233, 245, 10)','blue' ,'rgb(15, 252, 3)','red'],\r\n                    data: [confirmed.value, confirmed.value-(recovered.value+deaths.value), recovered.value, deaths.value]\r\n                }]\r\n             }}\r\n             options={{\r\n                 legend: {display: false},\r\n                 title: {display: true, text: `Cases in ${country}`}\r\n             }}\r\n            />\r\n        ): null\r\n    )\r\n    \r\n\r\n    const pieChart = (\r\n        confirmed ? (\r\n            <Doughnut \r\n            data={{\r\n                labels:['Active', 'Recovered', 'Deaths'],\r\n                datasets:[{\r\n                    label: 'People',\r\n                    backgroundColor: ['blue', 'rgb(15, 252, 3)', 'red'],\r\n                    data: [confirmed.value-(recovered.value+deaths.value), recovered.value, deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend: {display: false},\r\n                title: {display: true, text: `Situation in ${country}`}\r\n            }}\r\n            />\r\n        ): null\r\n    )\r\n\r\n\r\n    return(\r\n    \r\n        <div className = {country ? styles.containercountry : styles.container}>\r\n            {/* {country ? barChart : lineChart}\r\n            {country ? pieChart : null}           */}\r\n            {country ? barChart && pieChart : barChart}\r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default Charts"]},"metadata":{},"sourceType":"module"}