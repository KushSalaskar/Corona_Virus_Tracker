{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Desktop\\\\Projects\\\\cov19\\\\src\\\\Components\\\\Charts\\\\Charts.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../api/index.js';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Charts.module.css';\n\nconst Charts = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetch = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetch();\n  });\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        bordercolor: 'yellow',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        bordercolor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.3)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgb(233, 245, 10)', 'green', 'red'],\n        data: [confirmed, recovered, deaths]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Cases in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Charts;","map":{"version":3,"sources":["C:/Users/Rajesh/Desktop/Projects/cov19/src/Components/Charts/Charts.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetch","lineChart","length","labels","map","date","datasets","label","bordercolor","fill","backgroundColor","barChart","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE;AAACC,IAAAA,SAAD;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,GAAP;AAAuCC,EAAAA;AAAvC,CAAD,KAAqD;AAChE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMa,KAAK,GAAG,YAAY;AACtBD,MAAAA,YAAY,CAAC,MAAMX,cAAc,EAArB,CAAZ;AACH,KAFD;;AAGAY,IAAAA,KAAK;AACR,GALQ,CAAT;AAOA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBAEI,oBAAC,IAAD;AACA,IAAA,IAAI,EAAG;AACHC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAYA,IAA1B,CADL;AAEHC,MAAAA,QAAQ,EAAE,CAAC;AACPb,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACV,UAAAA;AAAD,SAAD,KAAiBA,SAA/B,CADC;AAEPa,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,QAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKP;AACChB,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACR,UAAAA;AAAD,SAAD,KAAcA,MAA5B,CADP;AAECW,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICE,QAAAA,eAAe,EAAE,sBAJlB;AAKCD,QAAAA,IAAI,EAAE;AALP,OALO;AAFP,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,GAkBU,IAnBd;AAsBA,QAAME,QAAQ,GACVjB,SAAS,gBAEL,oBAAC,GAAD;AACC,IAAA,IAAI,EAAE;AACHS,MAAAA,MAAM,EAAC,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADJ;AAEHG,MAAAA,QAAQ,EAAC,CAAC;AACNC,QAAAA,KAAK,EAAE,QADD;AAENG,QAAAA,eAAe,EAAE,CAAC,mBAAD,EAAqB,OAArB,EAA6B,KAA7B,CAFX;AAGNjB,QAAAA,IAAI,EAAE,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,MAAvB;AAHA,OAAD;AAFN,KADP;AASC,IAAA,OAAO,EAAE;AACLgB,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OADH;AAELC,MAAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAgBE,QAAAA,IAAI,EAAG,YAAWlB,OAAQ;AAA1C;AAFF,KATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,GAgBN,IAjBP;AAsBA,sBACI;AAAK,IAAA,SAAS,EAAIN,MAAM,CAACyB,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,OAAO,GAAGc,QAAH,GAAcV,SAD1B,CADJ;AAKH,CA3DD;;AA6DA,eAAeT,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../api/index.js';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\n\r\nconst Charts = ({data: {confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([])\r\n\r\n    useEffect(() =>{\r\n        const fetch = async () => {\r\n            setDailyData(await fetchDailyData())\r\n        }\r\n        fetch()\r\n    });\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n            <Line \r\n            data= {{\r\n                labels: dailyData.map(({date}) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed}) => confirmed),\r\n                    label: 'Infected',\r\n                    bordercolor: 'yellow',\r\n                    fill: true\r\n                }, {\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    label: 'Deaths',\r\n                    bordercolor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.3)',\r\n                    fill: true\r\n                }]\r\n            }}\r\n            />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed \r\n        ? (\r\n            <Bar \r\n             data={{\r\n                labels:['Infected', 'Recovered', 'Deaths'],\r\n                datasets:[{\r\n                    label: 'People',\r\n                    backgroundColor: ['rgb(233, 245, 10)','green','red'],\r\n                    data: [confirmed, recovered, deaths]\r\n                }]\r\n             }}\r\n             options={{\r\n                 legend: {display: false},\r\n                 title: {display: true, text: `Cases in ${country}`}\r\n             }}\r\n            />\r\n        ): null\r\n    )\r\n    \r\n\r\n\r\n    return(\r\n        <div className = {styles.container}>\r\n            {country ? barChart : lineChart}            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Charts"]},"metadata":{},"sourceType":"module"}