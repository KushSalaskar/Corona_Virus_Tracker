{"version":3,"sources":["Components/Header/Header.jsx","Components/api/index.js","Components/Selector/Selector.jsx","Components/Cards/Cards.jsx","Components/Charts/Charts.jsx","Components/Footer/Footer.jsx","App.js","index.js","Components/Cards/Cards.module.css","Components/Charts/Charts.module.css","Components/Header/Header.module.css","Components/Selector/Selector.module.css","Components/Footer/Footer.module.css"],"names":["Header","Grid","xs","md","className","styles","container","url","fetchData","country","a","curl","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Selector","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","value","i","key","Cards","spacing","justify","item","component","Card","cx","card","infected","CardContent","Typography","variant","gutterBottom","yellow","start","end","duration","separator","color","fontc","Date","toDateString","active","blue","recover","green","death","red","CircularProgress","Charts","setDailyData","fetch","lineChart","length","labels","datasets","label","bordercolor","fill","backgroundColor","barChart","options","legend","display","title","text","pieChart","containercountry","Footer","App","state","fetchedData","setState","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.097cc3cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <Grid xs={12} md={3} className={styles.container}>\r\n            <h1> CoViD-19 Tracker </h1>\r\n        </Grid>\r\n        \r\n    );\r\n}\r\n\r\nexport default Header","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let curl = url\r\n    if(country){\r\n        curl = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const { data: {confirmed, recovered, deaths, lastUpdate}  } = await axios.get(curl)\r\n        return { confirmed, recovered, deaths, lastUpdate }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n//to comment if api breaks again\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`)\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`)\r\n        return countries.map((country) => country.name)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from '../api/index.js';\r\nimport styles from './Selector.module.css';\r\n\r\nconst Selector = ({handleCountryChange}) => {\r\n    \r\n    const [fetchedCountries, setFetchedCountries] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchedCountries = async () => {\r\n            setFetchedCountries(await fetchCountries())\r\n        } \r\n\r\n        fetchedCountries();\r\n    },[setFetchedCountries]);\r\n    \r\n    \r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\" >World</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default Selector","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid, CircularProgress} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\n\r\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate} }) => {\r\n    if(!confirmed){\r\n        return(\r\n            <CircularProgress color=\"secondary\" />\r\n        )\r\n    }\r\n    return(\r\n        <div className= {styles.container}>\r\n            <Grid container spacing={2} justify='center'>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography variant='h4' gutterBottom className={styles.yellow}>Infected</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp \r\n                                className={styles.yellow}\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.0}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography variant='body2' className={styles.yellow}>Number of people infected with COVID19 till</Typography>\r\n                        <Typography color='textSecondary' className={styles.fontc}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.active)}>\r\n                    <CardContent>\r\n                        <Typography variant='h4' gutterBottom className={styles.blue}>Active</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp \r\n                                className={styles.blue}\r\n                                start={0}\r\n                                end={(confirmed.value-(recovered.value+deaths.value))}\r\n                                duration={2.0}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography variant='body2' className={styles.blue}>Number of active cases of COVID19 till</Typography>\r\n                        <Typography color='textSecondary' className={styles.fontc}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recover)}>\r\n                    <CardContent>\r\n                        <Typography variant='h4' gutterBottom className={styles.green}>Recovered</Typography>\r\n                        <Typography variant='h5'>\r\n                        <CountUp \r\n                                className={styles.green}\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2.0}\r\n                                separator=\",\"\r\n                                />\r\n                        </Typography>\r\n                        <Typography variant='body2' className={styles.green}>Number of people recovered from COVID19 till</Typography>\r\n                        <Typography color='textSecondary' className={styles.fontc}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.death)}>\r\n                    <CardContent>\r\n                        <Typography variant='h4' gutterBottom className={styles.red}>Deaths</Typography>\r\n                        <Typography variant='h5'>\r\n                        <CountUp \r\n                                className={styles.red}\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2.0}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography variant='body2' className={styles.red}>Number of deaths due to COVID19 till</Typography>\r\n                        <Typography color='textSecondary' className={styles.fontc}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards","import React, { useState, useEffect } from 'react';\r\n//import React from 'react';\r\nimport { fetchDailyData } from '../api/index.js';\r\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\r\n//import { Bar, Doughnut } from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\n\r\nconst Charts = ({data: {confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([])\r\n\r\n    useEffect(() =>{\r\n        const fetch = async () => {\r\n            setDailyData(await fetchDailyData())\r\n        }\r\n        fetch()\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n            <Line \r\n            data= {{\r\n                labels: dailyData.map(({date}) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed}) => confirmed),\r\n                    label: 'Infected',\r\n                    bordercolor: 'yellow',\r\n                    fill: true\r\n                }, {\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    label: 'Deaths',\r\n                    bordercolor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.3)',\r\n                    fill: true\r\n                }]\r\n            }}\r\n            />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed \r\n        ? (\r\n            <Bar \r\n             data={{\r\n                labels:['Infected', 'Active', 'Recovered', 'Deaths'],\r\n                datasets:[{\r\n                    label: 'People',\r\n                    backgroundColor: ['rgb(233, 245, 10)','blue' ,'rgb(15, 252, 3)','red'],\r\n                    data: [confirmed.value, confirmed.value-(recovered.value+deaths.value), recovered.value, deaths.value]\r\n                }]\r\n             }}\r\n             options={{\r\n                 legend: {display: false},\r\n                 title: {display: true, text: `Cases in ${country}`}\r\n             }}\r\n            />\r\n        ): null\r\n    )\r\n    \r\n\r\n    const pieChart = (\r\n        confirmed ? (\r\n            <Doughnut \r\n            data={{\r\n                labels:['Active', 'Recovered', 'Deaths'],\r\n                datasets:[{\r\n                    label: 'People',\r\n                    backgroundColor: ['blue', 'rgb(15, 252, 3)', 'red'],\r\n                    data: [confirmed.value-(recovered.value+deaths.value), recovered.value, deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend: {display: false},\r\n                title: {display: true, text: `Situation in ${country}`}\r\n            }}\r\n            />\r\n        ): null\r\n    )\r\n\r\n\r\n    return(\r\n    \r\n        <div className = {country ? styles.containercountry : styles.container}>\r\n            {/*comment if api breaks*/}\r\n            {country ? barChart : lineChart}\r\n            {country ? pieChart : null}          \r\n            {/* {country ? barChart : barChart}\r\n            {country ? pieChart : null} */}\r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default Charts","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport styles from './Footer.module.css';\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <Grid xs={12} md={3} className={styles.container}>\r\n            <header> Developed by Kush Salaskar. </header>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\nimport Header from './Components/Header/Header';\nimport Selector from './Components/Selector/Selector';\nimport Cards from './Components/Cards/Cards';\nimport Charts from './Components/Charts/Charts';\nimport Footer from './Components/Footer/Footer';\nimport './styles.css';\nimport { fetchData } from './Components/api/index.js'\n\n\nclass App extends Component {\n  \n  state = {\n    data : [],\n    country: '',\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData()\n\n    this.setState({data: fetchedData})\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country)\n    \n    this.setState({data: fetchedData, country: country});\n  }\n\n  render() { \n    const { data, country } = this.state\n    return ( \n      <div className = 'container'>\n        <Header />\n        <Selector handleCountryChange={this.handleCountryChange}/>\n        <Cards data={data}/>\n        <Charts data={data} country = {country}/>\n        <Footer />\n      </div>\n     );\n  }\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__ciJOl\",\"card\":\"Cards_card__2Qlns\",\"fontc\":\"Cards_fontc__yrAsd\",\"infected\":\"Cards_infected__3KGML\",\"yellow\":\"Cards_yellow__1Zv53\",\"active\":\"Cards_active__2TU8w\",\"blue\":\"Cards_blue__2ov5U\",\"recover\":\"Cards_recover__1QvDj\",\"green\":\"Cards_green__29Mjr\",\"death\":\"Cards_death__1rbEy\",\"red\":\"Cards_red__3DEUs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1-tff\",\"containercountry\":\"Charts_containercountry__3HlwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__3NlB1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Selector_formControl__1odJb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__28yuI\"};"],"sourceRoot":""}