{"version":3,"sources":["Components/Header/Header.jsx","Components/api/index.js","Components/Selector/Selector.jsx","Components/Cards/Cards.jsx","Components/Charts/Charts.jsx","Components/Footer/Footer.jsx","App.js","index.js","Components/Cards/Cards.module.css","Components/Charts/Charts.module.css","Components/Header/Header.module.css","Components/Selector/Selector.module.css","Components/Footer/Footer.module.css"],"names":["Header","Grid","xs","md","className","styles","container","url","fetchData","country","a","curl","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","log","fetchCountries","countries","map","name","Selector","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","value","i","key","Cards","spacing","justify","item","component","Card","cx","card","infected","CardContent","Typography","variant","gutterBottom","yellow","start","end","duration","separator","color","fontc","Date","toDateString","active","blue","recover","green","death","red","CircularProgress","Charts","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","pieChart","containercountry","Footer","App","state","fetchedData","setState","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b648fd4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <Grid xs={12} md={3} className={styles.container}>\r\n            <h1> CoViD-19 Tracker </h1>\r\n        </Grid>\r\n        \r\n    );\r\n}\r\n\r\nexport default Header","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let curl = url\r\n    if(country){\r\n        curl = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const { data: {confirmed, recovered, deaths, lastUpdate}  } = await axios.get(curl)\r\n        return { confirmed, recovered, deaths, lastUpdate }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n// export const fetchDailyData = async () => {\r\n//     try {\r\n//         const { data } = await axios.get(`${url}/daily`)\r\n//         const modifiedData = data.map((dailyData) => ({\r\n//             confirmed: dailyData.confirmed.total,\r\n//             deaths: dailyData.deaths.total,\r\n//             date: dailyData.reportDate\r\n//         }));\r\n//         return modifiedData;\r\n//     } catch (error) {\r\n//         console.log(error);\r\n//     }\r\n// }\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`)\r\n        return countries.map((country) => country.name)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from '../api/index.js';\r\nimport styles from './Selector.module.css';\r\n\r\nconst Selector = ({handleCountryChange}) => {\r\n    \r\n    const [fetchedCountries, setFetchedCountries] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchedCountries = async () => {\r\n            setFetchedCountries(await fetchCountries())\r\n        } \r\n\r\n        fetchedCountries();\r\n    },[setFetchedCountries]);\r\n    \r\n    \r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\" >World</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default Selector","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid, CircularProgress} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\n\r\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate} }) => {\r\n    if(!confirmed){\r\n        return(\r\n            <CircularProgress color=\"secondary\" />\r\n        )\r\n    }\r\n    return(\r\n        <div className= {styles.container}>\r\n            <Grid container spacing={2} justify='center'>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography variant='h4' gutterBottom className={styles.yellow}>Infected</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp \r\n                                className={styles.yellow}\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.0}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography variant='body2' className={styles.yellow}>Number of people infected with COVID19 till</Typography>\r\n                        <Typography color='textSecondary' className={styles.fontc}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.active)}>\r\n                    <CardContent>\r\n                        <Typography variant='h4' gutterBottom className={styles.blue}>Active</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp \r\n                                className={styles.blue}\r\n                                start={0}\r\n                                end={(confirmed.value-(recovered.value+deaths.value))}\r\n                                duration={2.0}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography variant='body2' className={styles.blue}>Number of active cases of COVID19 till</Typography>\r\n                        <Typography color='textSecondary' className={styles.fontc}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recover)}>\r\n                    <CardContent>\r\n                        <Typography variant='h4' gutterBottom className={styles.green}>Recovered</Typography>\r\n                        <Typography variant='h5'>\r\n                        <CountUp \r\n                                className={styles.green}\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2.0}\r\n                                separator=\",\"\r\n                                />\r\n                        </Typography>\r\n                        <Typography variant='body2' className={styles.green}>Number of people recovered from COVID19 till</Typography>\r\n                        <Typography color='textSecondary' className={styles.fontc}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.death)}>\r\n                    <CardContent>\r\n                        <Typography variant='h4' gutterBottom className={styles.red}>Deaths</Typography>\r\n                        <Typography variant='h5'>\r\n                        <CountUp \r\n                                className={styles.red}\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2.0}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography variant='body2' className={styles.red}>Number of deaths due to COVID19 till</Typography>\r\n                        <Typography color='textSecondary' className={styles.fontc}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards","//import React, { useState, useEffect } from 'react';\r\nimport React from 'react';\r\n//import { fetchDailyData } from '../api/index.js';\r\n// import { Line, Bar, Doughnut } from 'react-chartjs-2';\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\n\r\nconst Charts = ({data: {confirmed, recovered, deaths}, country}) => {\r\n    // const [dailyData, setDailyData] = useState([])\r\n\r\n    // useEffect(() =>{\r\n    //     const fetch = async () => {\r\n    //         setDailyData(await fetchDailyData())\r\n    //     }\r\n    //     fetch()\r\n    // }, []);\r\n\r\n    // const lineChart = (\r\n    //     dailyData.length\r\n    //     ? (\r\n    //         <Line \r\n    //         data= {{\r\n    //             labels: dailyData.map(({date}) => date),\r\n    //             datasets: [{\r\n    //                 data: dailyData.map(({confirmed}) => confirmed),\r\n    //                 label: 'Infected',\r\n    //                 bordercolor: 'yellow',\r\n    //                 fill: true\r\n    //             }, {\r\n    //                 data: dailyData.map(({deaths}) => deaths),\r\n    //                 label: 'Deaths',\r\n    //                 bordercolor: 'red',\r\n    //                 backgroundColor: 'rgba(255, 0, 0, 0.3)',\r\n    //                 fill: true\r\n    //             }]\r\n    //         }}\r\n    //         />) : null\r\n    // );\r\n\r\n    const barChart = (\r\n        confirmed \r\n        ? (\r\n            <Bar \r\n             data={{\r\n                labels:['Infected', 'Active', 'Recovered', 'Deaths'],\r\n                datasets:[{\r\n                    label: 'People',\r\n                    backgroundColor: ['rgb(233, 245, 10)','blue' ,'rgb(15, 252, 3)','red'],\r\n                    data: [confirmed.value, confirmed.value-(recovered.value+deaths.value), recovered.value, deaths.value]\r\n                }]\r\n             }}\r\n             options={{\r\n                 legend: {display: false},\r\n                 title: {display: true, text: `Cases in ${country}`}\r\n             }}\r\n            />\r\n        ): null\r\n    )\r\n    \r\n\r\n    const pieChart = (\r\n        confirmed ? (\r\n            <Doughnut \r\n            data={{\r\n                labels:['Active', 'Recovered', 'Deaths'],\r\n                datasets:[{\r\n                    label: 'People',\r\n                    backgroundColor: ['blue', 'rgb(15, 252, 3)', 'red'],\r\n                    data: [confirmed.value-(recovered.value+deaths.value), recovered.value, deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend: {display: false},\r\n                title: {display: true, text: `Situation in ${country}`}\r\n            }}\r\n            />\r\n        ): null\r\n    )\r\n\r\n\r\n    return(\r\n    \r\n        <div className = {country ? styles.containercountry : styles.container}>\r\n            {/* {country ? barChart : lineChart}\r\n            {country ? pieChart : null}           */}\r\n            {country ? barChart : barChart}\r\n            {country ? pieChart : null}\r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default Charts","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport styles from './Footer.module.css';\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <Grid xs={12} md={3} className={styles.container}>\r\n            <header> Developed by Kush Salaskar. </header>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\nimport Header from './Components/Header/Header';\nimport Selector from './Components/Selector/Selector';\nimport Cards from './Components/Cards/Cards';\nimport Charts from './Components/Charts/Charts';\nimport Footer from './Components/Footer/Footer';\nimport './styles.css';\nimport { fetchData } from './Components/api/index.js'\n\n\nclass App extends Component {\n  \n  state = {\n    data : [],\n    country: '',\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData()\n\n    this.setState({data: fetchedData})\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country)\n    \n    this.setState({data: fetchedData, country: country});\n  }\n\n  render() { \n    const { data, country } = this.state\n    return ( \n      <div className = 'container'>\n        <Header />\n        <Selector handleCountryChange={this.handleCountryChange}/>\n        <Cards data={data}/>\n        <Charts data={data} country = {country}/>\n        <Footer />\n      </div>\n     );\n  }\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__ciJOl\",\"card\":\"Cards_card__2Qlns\",\"fontc\":\"Cards_fontc__yrAsd\",\"infected\":\"Cards_infected__3KGML\",\"yellow\":\"Cards_yellow__1Zv53\",\"active\":\"Cards_active__2TU8w\",\"blue\":\"Cards_blue__2ov5U\",\"recover\":\"Cards_recover__1QvDj\",\"green\":\"Cards_green__29Mjr\",\"death\":\"Cards_death__1rbEy\",\"red\":\"Cards_red__3DEUs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1-tff\",\"containercountry\":\"Charts_containercountry__3HlwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__3NlB1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Selector_formControl__1odJb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__28yuI\"};"],"sourceRoot":""}